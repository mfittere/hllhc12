!introduce markers between the cavity pairs and at the entrance and exit of D2 in order to check the orbit in D2 -> aperture
!S. = arc side, E. = ip side
use, sequence=lhcb1;
seqedit, sequence=lhcb1;
install, element=M.ACFC.ABL5.B1,class=MARKER,at=-(posCRABA2+posCRABB2)/2,from=IP5;!D C  B A   IP   A B  C D
install, element=M.ACFC.ABR5.B1,class=MARKER,at= (posCRABA1+posCRABB1)/2,from=IP5;
install, element=M.ACFC.CDL5.B1,class=MARKER,at=-(posCRABC2+posCRABD2)/2,from=IP5;
install, element=M.ACFC.CDR5.B1,class=MARKER,at= (posCRABC1+posCRABD1)/2,from=IP5;
endedit;

use, sequence=lhcb2;
seqedit, sequence=lhcb2;
install, element=M.ACFC.ABL5.B2,class=MARKER,at=-(posCRABA1+posCRABB1)/2,from=IP5;!D C  B A   IP   A B  C D
install, element=M.ACFC.ABR5.B2,class=MARKER,at= (posCRABA2+posCRABB2)/2,from=IP5;
install, element=M.ACFC.CDL5.B2,class=MARKER,at=-(posCRABC1+posCRABD1)/2,from=IP5;
install, element=M.ACFC.CDR5.B2,class=MARKER,at= (posCRABC2+posCRABD2)/2,from=IP5;
endedit;

matchOrbcrabOccx(IRN): macro={
value, occx;
  Use, period= LHCB1,RANGE=S.DS.LIRN.B1/E.DS.RIRN.B1;
  Use, period= LHCB2,RANGE=S.DS.LIRN.B2/E.DS.RIRN.B2;
!**** horizontal plane *******
  match, sequence=LHCB1,LHCB2, beta0= bir5b1,bir5b2, x = 0.0, px = 0.0, y = 0.0, py = 0.0;
  constraint, sequence=lhcb1,range=ACFCA.DLIRN.B1, x  =  Occx, px=0.0;
  constraint, sequence=lhcb2,range=ACFCA.DLIRN.B2, x  =  Occx, px=0.0;
!  constraint, sequence=lhcb1,range=ACFCA.DLIRN.B1, x  =  Occx, px=0.0;
!  constraint, sequence=lhcb2,range=ACFCA.DLIRN.B2, x  = -Occx, px=0.0;
  constraint, sequence=lhcb1,range=IPIRN, x  =  0, px =  0;
  constraint, sequence=lhcb2,range=IPIRN, x  =  0, px =  0;
  constraint, sequence=lhcb1,range=ACFCA.DRIRN.B1, x  =  Occx, px=0.0;
  constraint, sequence=lhcb2,range=ACFCA.DRIRN.B2, x  =  Occx, px=0.0;
!  constraint, sequence=lhcb1,range=ACFCA.DRIRN.B1, x  =  Occx, px=0.0;
!  constraint, sequence=lhcb2,range=ACFCA.DRIRN.B2, x  = -Occx, px=0.0;
  constraint, sequence=lhcb1,range=E.DS.RIRN.B1,x = 0.0, px = 0.0;
  constraint, sequence=lhcb2,range=E.DS.RIRN.B2,x = 0.0, px = 0.0;
  vary, name=acbxh1.lIRN;
  vary, name=acbxh1.rIRN;
!  vary, name=acbxh2.lIRN;
!  vary, name=acbxh2.rIRN;
  vary, name=acbxh3.lIRN;
  vary, name=acbxh3.rIRN;
  vary, name=acbrdh4.lIRNb1;
  vary, name=acbrdh4.lIRNb2;
  vary, name=acbrdh4.rIRNb1;
  vary, name=acbrdh4.rIRNb2;
  vary, name=acbyhs4.rIRNb1;
  vary, name=acbyhs4.lIRNb1;
  vary, name=acbyhs4.rIRNb2;
  vary, name=acbyhs4.lIRNb2;
  vary, name=acbyhs5.lIRNb1;
  vary, name=acbyhs5.lIRNb2;
  vary, name=acbyhs5.rIRNb1;
  vary, name=acbyhs5.rIRNb2;
!  vary, name=acbch6.lIRNb1;
!  vary, name=acbch6.rIRNb2;
!  vary, name=acbch7.rIRNb1;
!  vary, name=acbch7.lIRNb2;
  jacobian, calls = 10, tolerance=1.E-30,bisec=3;
  endmatch;
};

matchOrbcrabOccy(IRN): macro={
  Use, period= LHCB1,RANGE=S.DS.LIRN.B1/E.DS.RIRN.B1;
  Use, period= LHCB2,RANGE=S.DS.LIRN.B2/E.DS.RIRN.B2;
!**** vertical plane *******
  match, sequence=LHCB1,LHCB2, beta0= bir5b1,bir5b2, x = 0.0, px = 0.0, y = 0.0, py = 0.0;
  constraint, sequence=lhcb1,range=ACFCA.DLIRN.B1, y  =  Occy, py = 0.0;
  constraint, sequence=lhcb2,range=ACFCA.DLIRN.B2, y  =  Occy, py = 0.0;
!  constraint, sequence=lhcb1,range=ACFCA.DLIRN.B1, y  =  Occy, py = 0.0;
!  constraint, sequence=lhcb2,range=ACFCA.DLIRN.B2, y  = -Occy, py = 0.0;
  constraint, sequence=lhcb1,range=IPIRN, y  =  0, py =  0;
  constraint, sequence=lhcb2,range=IPIRN, y  =  0, py =  0;
  constraint, sequence=lhcb1,range=ACFCA.DRIRN.B1, y  =  Occy, py = 0.0;
  constraint, sequence=lhcb2,range=ACFCA.DRIRN.B2, y  =  Occy, py = 0.0;
!  constraint, sequence=lhcb1,range=ACFCA.DRIRN.B1, y  =  Occy, py = 0.0;
!  constraint, sequence=lhcb2,range=ACFCA.DRIRN.B2, y  = -Occy, py = 0.0;
  constraint, sequence=lhcb1,range=E.DS.RIRN.B1,y = 0.0, py = 0.0;
  constraint, sequence=lhcb2,range=E.DS.RIRN.B2,y = 0.0, py = 0.0;
  vary, name=acbxv1.lIRN;
  vary, name=acbxv1.rIRN;
!  vary, name=acbxv2.lIRN;
!  vary, name=acbxv2.rIRN;
  vary, name=acbxv3.lIRN;
  vary, name=acbxv3.rIRN;
  vary, name=acbrdv4.lIRNb1;
  vary, name=acbrdv4.lIRNb2;
  vary, name=acbrdv4.rIRNb1;
  vary, name=acbrdv4.rIRNb2;
  vary, name=acbyvs4.rIRNb1;
  vary, name=acbyvs4.lIRNb1;
  vary, name=acbyvs4.rIRNb2;
  vary, name=acbyvs4.lIRNb2;
  vary, name=acbyvs5.lIRNb1;
  vary, name=acbyvs5.lIRNb2;
  vary, name=acbyvs5.rIRNb1;
  vary, name=acbyvs5.rIRNb2;
!  vary, name=acbcv6.rIRNb1;
!  vary, name=acbcv6.lIRNb2;
!  vary, name=acbcv7.lIRNb1;
!  vary, name=acbcv7.rIRNb2;
  jacobian, calls = 10, tolerance=1.E-30,bisec=3;
  endmatch;
};

matchOrbcrabDabcd(IRN,BIM): macro={
Use, period= LHCBIM,RANGE=S.DS.LIRN.BIM/E.DS.RIRN.BIM;
match, sequence=LHCBIM, beta0= birIRNBIM, x = 0.0, px = 0.0, y = 0.0, py = 0.0;
constraint, sequence=lhcBIM,range=M.ACFC.CDLIRN.BIM, x  =  dABCD;
constraint, sequence=lhcBIM,range=IPIRN, x  =  0, px =  0;
constraint, sequence=lhcBIM,range=M.ACFC.CDRIRN.BIM, x  =  dABCD;
constraint, sequence=lhcBIM,range=E.DS.RIRN.BIM,x = 0.0, px = 0.0;
vary, name=acbrdh4.lIRNBIM;
vary, name=acbrdh4.rIRNBIM;
vary, name=acbyhs4.rIRNBIM;
vary, name=acbyhs4.lIRNBIM;
vary, name=acbyhs5.lIRNBIM;
vary, name=acbyhs5.rIRNBIM;
!vary, name=acbch6.lIRNBIM;
!vary, name=acbch7.rIRNBIM;
jacobian, calls = 10, tolerance=1.E-30,bisec=3;
endmatch;

Use, period= LHCBIM,RANGE=S.DS.LIRN.BIM/E.DS.RIRN.BIM;
match, sequence=LHCBIM, beta0= birIRNBIM, x = 0.0, px = 0.0, y = 0.0, py = 0.0;
constraint, sequence=lhcBIM,range=M.ACFC.CDLIRN.BIM, y  =  dABCD;
constraint, sequence=lhcBIM,range=IPIRN, y  =  0, py =  0;
constraint, sequence=lhcBIM,range=M.ACFC.CDRIRN.BIM, y  =  dABCD;
constraint, sequence=lhcBIM,range=E.DS.RIRN.BIM,y = 0.0, py = 0.0;
vary, name=acbrdv4.lIRNBIM;
vary, name=acbrdv4.rIRNBIM;
vary, name=acbyvs4.rIRNBIM;
vary, name=acbyvs4.lIRNBIM;
vary, name=acbyvs5.lIRNBIM;
vary, name=acbyvs5.rIRNBIM;
!vary, name=acbcv6.rIRNBIM;
!vary, name=acbcv7.lIRNBIM;
jacobian, calls = 10, tolerance=1.E-30,bisec=3;
endmatch;

};

return;
!shift knobs
!ccp
Occx=5e-04;Occy=5e-04;
exec,matchOrbcrabOccx(5);
exec,matchOrbcrabOccy(5);
!slope knob (ccs):
!create a knob to control the offset between the crab cavities for one beam
!general layout: 2 crab cavities per cryomodule and 4 crab cavities per side per beam
!move cryo module DC in respect to BA, while BA stays fixed + close orbit bump with MCBRD -> condition x(IP5=0)
dABCD=2.5e-04;
exec,matchOrbcrabDabcd(5,b1);
exec,matchOrbcrabDabcd(5,b2);

